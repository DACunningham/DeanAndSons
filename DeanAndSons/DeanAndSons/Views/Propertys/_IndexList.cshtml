@using DeanAndSons.Models.WAP.ViewModels
@using PagedList.Mvc
@model PagedList.IPagedList<PropertyIndexViewModel>

@foreach (var item in Model)
{
    <div class="row">
        @* ********** Image ********** *@
        <div class="col-md-2">
            <a href="@Url.Action("Details", "Propertys", new { id = item.PropertyID })">
                <img src="@item.Image.Location" class="img-responsive img-thumbnail center-block" alt="@item.Title image" />
            </a>
        </div>

        @* ********** Body ********** *@
        <div class="col-md-8">

            <div class="row">
                <div class="col-md-12">
                    <h4>@Html.ActionLink(@item.Title, "Details", "Propertys", new { id = @item.PropertyID }, null)</h4>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p>@item.Description</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p>Address: @item.Contact.PropertyNo @item.Contact.Street, @item.Contact.Town, @item.Contact.PostCode</p>
                </div>
            </div>

        </div>

        @* ********** End ********** *@
        <div class="col-md-2">

            <div class="row">
                <div class="col-md-12">
                    <p>Property Type: @item.Type </p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <p>Price: @item.Price </p>
                </div>
            </div>

        </div>
    </div>
}

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, CategorySort = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))